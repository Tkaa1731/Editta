@if(Source is not null)
{
	<div @onclick="async()=> await OnClick.InvokeAsync(Source)" class="px-3 mb-2 record-container @color pointer @CssClass">
		<div class="row align-items-center">
			@switch (Source.Record.RecordType)
			{
				case ERecordType.Folder:
					<div class="col-2 py-3">
						<HxIcon Icon="BootstrapIcon.Folder"></HxIcon>
					</div>
					<div class="col">
						<span>@Source.Record.Name</span>
					</div>
					break;
				case ERecordType.Ware:
					<div class="col-2 py-3">
						<HxIcon Icon="BootstrapIcon.Cart"></HxIcon>
					</div>
					<div class="col">
						<span>@Source.Record.Name</span>
					</div>
					<div class="col-2 py-3" style="color:grey; text-align:right;">
						<span>@Source.Record.Stock</span>
					</div>
					break;
				case ERecordType.Activity:
					<div class="col-2 py-3">
						<HxIcon Icon="BootstrapIcon.CalendarEvent"></HxIcon>
					</div>
					<div class="col">
						<span>@Source.Record.Name</span>
					</div>
					break;
				case ERecordType.EmployeeTasks:
					<div class="col-2 py-3">
						<HxIcon Icon="BootstrapIcon.People"></HxIcon>
					</div>
					<div class="col">
						<span>@Source.Record.Name</span>
					</div>
					break;
			}
			@if (Source.Record.IsSeasonTicket)
			{
				<div class="col-auto h3" style="text-align:right;" @onmouseenter="()=>{ticketHover=true;Source.SeasonTickedSelected=true;}" @onmouseleave="()=>{ticketHover=false;Source.SeasonTickedSelected=false;}">
					@if (ticketHover)
					{
						<HxIcon Icon="BootstrapIcon.TicketPerforatedFill" CssClass="text-danger"></HxIcon>
					}
					else
					{
						<HxIcon Icon="BootstrapIcon.TicketPerforated" CssClass="text-danger"></HxIcon>
					}
				</div>
			}
		</div>
	</div>
}

@code {
	[EditorRequired]
	[Parameter]
	public RecordTreeView? Source { get; set; }
	[Parameter]
	public string CssClass { get; set; }
	[EditorRequired]
	[Parameter]
	public EventCallback<RecordTreeView> OnClick { get; set; }
	private bool ticketHover = false;
	private string color
	{
		get
		{
			string c = "";
			if (Source is null)
				return c;
			switch (Source.Record.RecordType)
			{
				case ERecordType.Folder:
					c = "orange";
					break;
				case ERecordType.Ware:
					c = "blue";
					break;
				case ERecordType.Activity:
					c = "purple";
					break;
				case ERecordType.EmployeeTasks:
					c = "green";
					break;
			}
			return c;
		}
	}
}
