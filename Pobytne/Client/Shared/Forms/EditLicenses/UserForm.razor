@using System.ComponentModel.DataAnnotations;

<EditForm Model="@user">
    <DataAnnotationsValidator />
	<div class="mx-3 mt-3">
		<div class="row">
			<div class="col">
				<HxInputText @bind-Value="user.UserLogin" Label="Login" Type="InputType.Text" MaxLength=35 ValidationMessageMode="ValidationMessageMode.Regular"/>
			</div>
			<div class="col">
				<HxInputText @bind-Value="user.UserName" Label="Jméno uživatele" Type="InputType.Text" MaxLength=35 ValidationMessageMode="ValidationMessageMode.Regular"/>
			</div>
		</div>
		<div class="row">
			<div class="col">
				<HxInputText @bind-Value="user.Email" Label="Email" Type="InputType.Email" MaxLength=50 ValidationMessageMode="ValidationMessageMode.Regular"/>
			</div>
			<div class="col">
				<HxInputText @bind-Value="user.PhoneNumber" Label="Telefonní číslo" Type="InputType.Tel" MaxLength=35 ValidationMessageMode="ValidationMessageMode.Regular"/>
			</div>
            <div class="col">
				<HxInputNumber Label="Číslo klienta" CssClass="mb-3" Decimals="0" TValue="int" @bind-Value="user.ClientId" />
            </div>
		</div>
		<div class="row align-items-center">
			<div class="col">
		        <HxSwitch Text="Je aktivní" @bind-Value="user.Valid" />
			</div>
			<div class="col">
				<HxInputNumber Label="Číslo licence" CssClass="mb-3" Decimals="0" TValue="int" @bind-Value="user.LicenseNumber" Enabled="false" />
			</div>
		</div>
		<div class="row">
            <div class="col">
                <HxInputDate CalendarIcon="BootstrapIcon.Calendar" @bind-Value="user.ValidFrom" Label="Platní od" />
            </div>
            <div class="col">
                <HxInputDate CalendarIcon="BootstrapIcon.Calendar" @bind-Value="user.ValidTo"  MinDate="user.ValidFrom.AddDays(1)" Label="Platí do"/>
            </div>
        </div>

    </div>

    <div class="d-grid gap-2">
        <AuthorizeView Policy="PermitionPolicy" Resource=(EPermition.LoginUser,EAccess.FullAccess,moduleWorkspace.ModuleId)>
            <Authorized Context="auth_context">
                <HxSubmit Color="ThemeColor.Success" OnValidClick="OnValidSubmitHandler">@ButtonText</HxSubmit>
            </Authorized>
            <NotAuthorized Context="auth_context">
                <HxSubmit Color="ThemeColor.Success" Enabled=false>@ButtonText</HxSubmit>
            </NotAuthorized>
        </AuthorizeView>
    </div>

</EditForm>


@code {
    [CascadingParameter]
    private ModuleWorkplace moduleWorkspace { get; set; } = default!;
    [EditorRequired]
    [Parameter]
    public User user { get; set; } = default!;
    [EditorRequired]
    [Parameter]
    public EForm formType { get; set; }
    [EditorRequired]
    [Parameter]
    public EventCallback<EForm> OnValidSubmit{ get; set; }
    private string ButtonText
    {
        get
        {
            if (formType == EForm.Insert) return "Vložit";
            return "Aktualizovat";
        }
    }
    private async Task OnValidSubmitHandler() => await OnValidSubmit.InvokeAsync(formType);

}
