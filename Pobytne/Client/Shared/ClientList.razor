@inject PobytneService _service

	<ListCustom ListTitle="Počet klientů" ListItems="AllClients" selectedItemChanged="HandleSelectedDataItemChanged" EventNewItem="OnNewItem" selectedItem="Value" Editable="Editable" />
	<FormMessageBox formItem="Value" @ref=formMessageBox OnSuccessRequest="StateHasChanged"></FormMessageBox>

@code {
	[CascadingParameter]
	private ModuleWorkplace moduleWorkspace { get; set; } = default!;
	[Parameter]
	public bool Editable { get; set; } = true;
	[Parameter]
	public required IListItem Value { get; set; }
	[Parameter]
	public EventCallback<IListItem?> ValueChanged { get; set; }

	private List<IListItem> AllClients = [];
	private FormMessageBox formMessageBox;
	protected override async Task OnInitializedAsync()
	{
		var response = await _service.GetAllAsync<Client>($"ClientsList?moduleNumber={moduleWorkspace.Id}", moduleWorkspace.Id);
		List<Client> clients = new();
		if (response is null)
			Console.WriteLine($"NO RESPONSE");
		else if (response is ErrorResponse response1)
			Console.WriteLine($"{response1.ErrorMessage}");
		else if (response is List<Client> list)
			clients = list;

		if (clients.Count > 0)
			AllClients = clients.Where(c => c.Id != 0).Select(c => c as IListItem).ToList();
	}
	private async Task HandleSelectedDataItemChanged(IListItem selection)
	{
		Value = selection;
		await ValueChanged.InvokeAsync(Value);
		if (Editable)
			await formMessageBox.UpdateForm();
	}
	private async Task OnNewItem()
	{
		Value = new Client()
			{
				ModuleId = moduleWorkspace.Id,
				Valid = true,
				ValidFrom = DateTime.Now,
				ValidTo = DateTime.Now.AddYears(1)
			};
		await formMessageBox.InsertForm();
	}
}
