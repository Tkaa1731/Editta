@page "/Password/Reset/{URI}"
@attribute [AllowAnonymous]
@inject PobytneService service
@inject IHxMessengerService Messenger
@inject NavigationManager navManager


<div class="container py-5 vh-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-12 col-md-8 col-lg-6 col-xl-5">
            <div class="card floating-card">
                <div class="card-body p-5">

                    <h3 class="mb-4 headline text-center fw-bold text-black">Nastavnení hesla</h3>
                    <EditForm Model="@reset">
                        <DataAnnotationsValidator />


                        <HxInputText @bind-Value="reset.Password" Label="Nové heslo" Type="InputType.Password" MaxLength=32 ValidationMessageMode="ValidationMessageMode.Regular" CssClass="mx-3" />
                        <HxInputText @bind-Value="reset.PasswordConfirm" Label="Potvrďte heslo" Type="InputType.Password" MaxLength=32 ValidationMessageMode="ValidationMessageMode.Regular" CssClass="mx-3" />


                        <div class="d-grid gap-2 mt-3">
							<HxSubmit Color="ThemeColor.Primary" OnValidClick="OnValidSubmit">Nastavit</HxSubmit>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    [EditorRequired]
    [Parameter]
    public string URI { get; set; } = string.Empty; 
    private PasswordRequest reset = new();

    private async Task OnValidSubmit()
    {
        reset.JWT = URI;

        var request = await service.UpdatePasswordAsync(reset);

        if (request is ErrorResponse error)
        {
            Messenger.AddError(title: "Chyba při změně hesla", message: error.ErrorMessage);
            reset = new();
        }
        else if(request is Task t && t.IsCompletedSuccessfully)
        {
            Messenger.AddInformation(title: "Změna proběhla úspěšně", message: "Aktualizace hesla se zdařila.");
            navManager.NavigateTo("/Login");
        }
    }
}
