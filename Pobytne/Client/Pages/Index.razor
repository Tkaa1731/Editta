@page "/"
@inject IJSRuntime js
@inject ILocalStorageService localStorage
@inject PobytneService service
@inject NavigationManager navManager


<PageTitle>Home</PageTitle>
<AuthorizeView>
    <NotAuthorized>

        <p>Pravdepodobne nejste prihlasen</p>
    </NotAuthorized>
    <Authorized>
        <div class="container mt-5">
            <div class="row">
                @if (permitions is not null)
                {
                    @foreach (var module in permitions)
                    {
                        <div class="col">
                            <a href="/@module.ModuleId/" class="no-link">
                                <div class="card" style="height:130px">
                                    <div class="card-body">
                                        <h5 class="card-title">@module.ModuleName</h5>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                }
            </div>
        </div>
    </Authorized>

</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; } = default!;

    private List<Permition>? permitions => _user?.AccessPermition;
    private User? _user;

    protected async override Task OnInitializedAsync()
    {
        var authState = await authenticationState;
        if (authState.User.Identity is not null && authState.User.Identity.IsAuthenticated)
        {
            var user = await localStorage.ReadEncryptedItem<UserAccount>(LocalStorageService.USER_SESSION);
            if (user is not null)
                _user = user.User;
        }
        // else
        // {
        //     navManager.NavigateTo("/Login", true);
        // }

        return;
    }
}