@attribute [AllowAnonymous]
@page "/Login"
@inject AuthenticationService authService
@inject NavigationManager navManager
@inject IHxMessengerService Messenger

<PageTitle>Přihlášení</PageTitle>

<div class="container py-5" style="height: 100svh">
    <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-12 col-md-8 col-lg-6 col-xl-5">
            <div class="card floating-card">
                <div class="card-body p-5 text-center">

                    <h3 class="mb-4 headline text-center fw-bold text-black">Editta přihlášení</h3>
                    <EditForm Model="@logRequest">
                        <DataAnnotationsValidator />

                        <div class="row align-items-start">
                            <div class="col">
                                <HxInputText @bind-Value="logRequest.Name" Label="Login" Type="InputType.Text" />
                            </div>
                            <div class="col">
                                <HxInputText @bind-Value="logRequest.Password" Label="Heslo" Type="InputType.Password" />
                            </div>
                        </div>
                        <div class="d-grid gap-2 my-3">
                            <HxSubmit Color="ThemeColor.Primary" OnValidClick="Authenticate">Přihlásit se</HxSubmit>
                        </div>
                    </EditForm>
                    <a href="Password/Forgot" class="w-100">Zapomenuté heslo?</a>
                </div>
            </div>
        </div>
    </div>
</div>



@code {
    [CascadingParameter]
    private ModuleWorkplace moduleWorkspace { get; set; } = default!;

    private LoginRequest logRequest = new();
    private string errorMessage = String.Empty;
    private async Task Authenticate()
    {
        var logResponse = await authService.Login(logRequest);
        if (logResponse is UserAccount user)
        {
            moduleWorkspace.UserId = user.User.Id;
            moduleWorkspace.UserName = user.User.UserName;

            moduleWorkspace.LicenseNumber = user.User.LicenseNumber;
            moduleWorkspace.LicenseName = user.User.LicenseName;
            moduleWorkspace.ModulesDic = user.User.AccessPermition.ToDictionary(p => p.ModuleId, p => p.ModuleName);
            navManager.NavigateTo("/", false);
        }
        else
        {
            if (logResponse is ErrorResponse error)
                errorMessage = error.ErrorMessage;
            else
                errorMessage = "Vyskytla se neočekávaná chyba";
            Messenger.Clear();
            Messenger.AddError(title: "Chyba při přihlašování", message: errorMessage);
            logRequest = new();
            return;
        }
    }

}
