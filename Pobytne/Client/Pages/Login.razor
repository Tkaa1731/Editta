@page "/Login"
@attribute [AllowAnonymous]
@inject AuthenticationService authService
@inject NavigationManager navManager


<section class="vh-100" style="background-color: rgba(255,255,255,0.8);">
	<div class="container py-5 h-100">
		<div class="row d-flex justify-content-center align-items-center h-100">
			<div class="col-12 col-md-8 col-lg-6 col-xl-5">
				<div class="card shadow-2-strong" style="border-radius: 1rem;">
					<div class="card-body p-5 text-center">

						<h3 class="mb-5">Sign in</h3>
                        <EditForm Model="@logRequest" OnValidSubmit=Authenticate>
                            <DataAnnotationsValidator />

                            <div class="row align-items-start">
                                <div class="col">
                                    <HxInputText @bind-Value="logRequest.Name" Label="User login" Type="InputType.Text" />
                                </div>
                                <div class="col">
                                    <HxInputText @bind-Value="logRequest.Password" Label="Password" Type="InputType.Password" />
                                </div>
                            </div>
                            <div class="error-message">
                                <p>@errorMessage</p>
                            </div>
                            <div class="d-grid gap-2">
                                <HxSubmit Color="ThemeColor.Success">Login</HxSubmit>
                            </div>
                        </EditForm>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>



@code {
    private LoginRequest logRequest = new();
    private string errorMessage = String.Empty;
    private async Task Authenticate()
    {
        var logResponse = await authService.Login(logRequest);
        if (logResponse.IsCompleted)
        {
            navManager.NavigateTo("/", true);
        }
        else 
        {
            var errorResponse = logResponse.AsyncState as ErrorResponse;
            if (errorResponse is not null)
                errorMessage = errorResponse.ErrorMessage;
            else
                errorMessage = "Unknow error occured";
            logRequest = new();
            return;
        }
    }

}
